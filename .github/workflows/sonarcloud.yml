name: Sonarcloud

on:
  push:
    branches:
      - main
      - staging
  workflow_dispatch:
  pull_request:
    branches:
      - main
      - staging

env:
  CARGO_TERM_COLOR: always

jobs:
  sonarcloud:
    name: SonarCloud and Linter
    runs-on: ubuntu-latest
    container:
      image: xd009642/tarpaulin:develop-nightly
      options: --security-opt seccomp=unconfined
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis

      - name: Install Rust
        run: rustup update stable

      - name: Install Protobuf
        run: |
          apt-get update
          apt-get install -y protobuf-compiler libprotobuf-dev

      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov

      - name: Install Clippy
        run: rustup component add clippy

      - name: Install cargo-sonar and run Clippy
        run: |
          cargo install cargo-sonar
          cargo clippy --message-format json > my-clippy-report.json
          cargo sonar --clippy --clippy-path my-clippy-report.json

      - name: Build with coverage
        run: |
          RUSTFLAGS="-C instrument-coverage" cargo build

      - name: Generate code coverage
        run: cargo llvm-cov --all-features --workspace --lcov --output-path lcov.info
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        with:
          args: >
            -Dsonar.externalIssuesReportPaths=sonar-issues.json
            -Dcommunity.rust.lcov.reportPaths=lcov.info